---
# See https://doc.traefik.io/traefik/
# See https://docs.docker.com/compose/compose-file/compose-file-v3/
version: "3.9"
services:
    proxy:
        image: traefik:v2.5
        hostname: "${COMPOSE_PROJECT_NAME}-proxy"
        container_name: "${COMPOSE_PROJECT_NAME}_proxy"
        restart: unless-stopped
        extra_hosts:
            - "host.dev:${HOST_IP}"
            - "host.docker.internal:172.16.200.1" # ensure that this hostname will be available for all containers. Should point to host server
        ports:
            - "80:80" # Default HTTP port
            - "443:443" # Default HTTPS port
            - "8080:8080" # The web UI
            # - "8888:8888" # TODO: Port-backup for the HTTP
            # - "3306:3306" # TODO: MySQL proxying
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
            - "./etc/traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro"
            - "./etc/traefik/dynamic_provider.conf.yaml:/etc/traefik/dynamic.conf/dynamic_provider.conf.yaml:ro"
            - "./var/ssl-certs/${APP_HOST}.crt:/etc/ssl/certs/server.crt:ro"
            - "./var/ssl-certs/${APP_HOST}.key:/etc/ssl/private/server.key:ro"
        # labels:
        #     - "traefik.enable=true"
        #     - "traefik.http.middlewares.proxy-headers.headers.customRequestHeaders.X-Via=${COMPOSE_PROJECT_NAME}-proxy"

        #     - "traefik.http.routers.priority=1000"
        #     - "traefik.http.routers.proxy.rule=PathPrefix(`/`)"
        #     - "traefik.http.routers.proxy.entryPoints=web"
        #     - "traefik.http.routers.proxy.middlewares=proxy-headers@docker"

        #     # CORS headers
        #     - "traefik.http.middlewares.proxy-header.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,DELETE,POST"
        #     - "traefik.http.middlewares.proxy-header.headers.accessControlAllowOriginList=https://${APP_HOST},https://localhost"
        #     - "traefik.http.middlewares.proxy-header.headers.accesscontrolmaxage=100"
        #     - "traefik.http.middlewares.proxy-header.headers.addvaryheader=true"

        networks:
            hip_net:
                ipv4_address: 172.16.200.100
                aliases:
                    - "${APP_HOST}"
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "3"

    # web-server:
    #     image: nginx:1-alpine
    #     hostname: "${COMPOSE_PROJECT_NAME}-web-server"
    #     container_name: "${COMPOSE_PROJECT_NAME}_web-server"
    #     restart: unless-stopped
    #     extra_hosts:
    #         - "host.dev:${HOST_IP}"
    #         - "host.docker.internal:172.16.200.1"
    #     # ports:
    #     #     - "8888:80"
    #     volumes:
    #         - "./data:${DATA_DIR}"
    #         - "./etc/nginx/nginx.conf:/etc/nginx/nginx.conf"
    #         - "./etc/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf"
    #     labels:
    #         - "traefik.enable=true"
    #         - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-web-server.rule=PathPrefix(`/`)"
    #         - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-web-server.headers.customResponseHeaders.X-Out=test"
    #         - "traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-web-server.stripprefix.prefixes=/web"
    #         # - "traefik.http.middlewares.web-redirectscheme.redirectscheme.scheme=https"
    #         # - "traefik.http.middlewares.web-redirectscheme.redirectscheme.permanent=true"
    #     environment:
    #         DATA_DIR: "${DATA_DIR}"
    #     depends_on:
    #         - php
    #     networks:
    #         hip_net:
    #             ipv4_address: 172.16.200.110
    #     logging:
    #         driver: "json-file"
    #         options:
    #             max-size: "200k"
    #             max-file: "3"

    # php:
    #     image: bravepickle/php:7.4-fpm-alpine-dev
    #     hostname: "${COMPOSE_PROJECT_NAME}-php"
    #     container_name: "${COMPOSE_PROJECT_NAME}_php"
    #     restart: unless-stopped
    #     extra_hosts:
    #         - "host.dev:${HOST_IP}"
    #         - "host.docker.internal:172.16.200.1"
    #     volumes:
    #         - "./data:${DATA_DIR}"
    #     depends_on:
    #         - db
    #         - redis
    #     environment:
    #         DATA_DIR: "${DATA_DIR}"
    #     networks:
    #         hip_net:
    #             ipv4_address: 172.16.200.120
    #     logging:
    #         driver: "json-file"
    #         options:
    #             max-size: "200k"
    #             max-file: "3"

    # php8:
    #     image: bravepickle/php:8-fpm-alpine-dev
    #     hostname: "${COMPOSE_PROJECT_NAME}-php8"
    #     container_name: "${COMPOSE_PROJECT_NAME}_php8"
    #     restart: unless-stopped
    #     extra_hosts:
    #         - "host.dev:${HOST_IP}"
    #         - "host.docker.internal:172.16.200.1"
    #     volumes:
    #         - "./data:${DATA_DIR}"
    #     depends_on:
    #         - db
    #         - redis
    #     environment:
    #         DATA_DIR: "${DATA_DIR}"
    #     networks:
    #         hip_net:
    #             ipv4_address: 172.16.200.121
    #     logging:
    #         driver: "json-file"
    #         options:
    #             max-size: "200k"
    #             max-file: "3"

    # db:
    #     image: percona:5.7
    #     hostname: "${COMPOSE_PROJECT_NAME}-db"
    #     container_name: "${COMPOSE_PROJECT_NAME}_db"
    #     restart: unless-stopped
    #     environment:
    #         MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASS}"
    #         MYSQL_DATABASE: "${DB_NAME}"
    #         MYSQL_USER: "${DB_USER}"
    #         MYSQL_PASSWORD: "${DB_PASS}"
    #     networks:
    #         hip_net:
    #             ipv4_address: 172.16.200.130
    #     volumes:
    #         - db-data:/var/lib/mysql
    #     logging:
    #         driver: "json-file"
    #         options:
    #             max-size: "200k"
    #             max-file: "3"

    # redis:
    #     image: redis:6-alpine
    #     hostname: "${COMPOSE_PROJECT_NAME}-redis"
    #     container_name: "${COMPOSE_PROJECT_NAME}_redis"
    #     restart: unless-stopped
    #     networks:
    #         hip_net:
    #             ipv4_address: 172.16.200.140
    #     logging:
    #         driver: "json-file"
    #         options:
    #             max-size: "200k"
    #             max-file: "3"

    whoami:
        image: traefik/whoami
        hostname: "${COMPOSE_PROJECT_NAME}-whoami"
        container_name: "${COMPOSE_PROJECT_NAME}_whoami"
        restart: unless-stopped
        extra_hosts:
            - "host.docker.internal:172.16.200.1"
        depends_on:
            - proxy
        labels:
            - "traefik.enable=true"
            - "traefik.http.middlewares.whoami-prefix.stripprefix.prefixes=/whoami"

            - "traefik.http.middlewares.whoami-headers.headers.customRequestHeaders.X-In=foo-in"
            - "traefik.http.middlewares.whoami-headers.headers.customResponseHeaders.X-Out=foo-out"

            # - "traefik.http.middlewares.whoami-redirect.redirectscheme.scheme=https"
            # - "traefik.http.middlewares.whoami-redirect.redirectscheme.permanent=false"

            # CORS headers
            - "traefik.http.middlewares.whoami-headers.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,DELETE,POST"
            - "traefik.http.middlewares.whoami-headers.headers.accessControlAllowOriginList=https://${APP_HOST},https://localhost"
            - "traefik.http.middlewares.whoami-headers.headers.accessControlMaxAge=100"
            - "traefik.http.middlewares.whoami-headers.headers.addVaryHeader=true"
            - "traefik.http.middlewares.whoami-headers.headers.accessControlExposeHeaders=*"
            - "traefik.http.middlewares.whoami-headers.headers.allowedHosts=${APP_HOST},localhost"
            - "traefik.http.middlewares.whoami-headers.headers.frameDeny=true"
            # - "traefik.http.middlewares.whoami-headers.headers.sslRedirect=true"
            - "traefik.http.middlewares.whoami-headers.headers.browserXssFilter=true"
            - "traefik.http.middlewares.whoami-headers.headers.contentTypeNosniff=true"
            - "traefik.http.middlewares.whoami-headers.headers.forceSTSHeader=true"
            - "traefik.http.middlewares.whoami-headers.headers.stsIncludeSubdomains=true"
            - "traefik.http.middlewares.whoami-headers.headers.stsPreload=true"
            - "traefik.http.middlewares.whoami-headers.headers.customFrameOptionsValue=SAMEORIGIN"
            - "traefik.http.middlewares.whoami-headers.headers.isDevelopment=true"


            - "traefik.http.routers.whoami.rule=PathPrefix(`/whoami`)"
            - "traefik.http.routers.whoami.entryPoints=web,webSecured"
            - "traefik.http.routers.whoami.middlewares=whoami-prefix@docker,whoami-headers@docker"
            # - "traefik.http.routers.whoami.middlewares=whoami-redirect@docker"
            # - "traefik.http.routers.whoami.middlewares=whoami-prefix@docker,whoami-headers@docker,whoami-redirect@docker"
            # - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-whoami.entryPoints=web,webSecured"

            # - "traefik.http.middlewares.whoami=app-prefix@file"
            # - "traefik.http.routers.whoami-hipster.middlewares=app-prefix@file,default-headers@file"




        networks:
            hip_net:
                ipv4_address: 172.16.200.200
        logging:
            driver: "json-file"
            options:
                max-size: "200k"
                max-file: "3"

volumes:
    db-data: ~


networks:
    hip_net:
        driver: bridge
        ipam:
            driver: default
            config:
                -   subnet: 172.16.200.0/24
